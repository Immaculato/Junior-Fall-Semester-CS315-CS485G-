Script started on Fri 02 Sep 2016 11:15:57 AM EDT
]0;taba238@taba238: ~/CS485G/Lab2taba238@taba238:~/CS485G/Lab2$ gcc [K -Wall -g -o match match.c
]0;taba238@taba238: ~/CS485G/Lab2taba238@taba238:~/CS485G/Lab2$ gdb ./match
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./match...done.
(gdb) b 55
Breakpoint 1 at 0x4007d9: file match.c, line 55.
(gdb) r
Starting program: /home/taba238/CS485G/Lab2/match 

Breakpoint 1, firstTest (name1=0x7fffffffe430 "/etc/hosts", 
    name2=0x7fffffffe4a0 "/etc/networks") at match.c:55
55		if ((fd1 = open(name1, O_RDONLY)) < 0) {
(gdb) n
59		if ((fd2 = open(name2, O_RDONLY)) < 0) {
(gdb) n
64		retval = lseek(fd1, 10, SEEK_CUR);
(gdb) n
65		if (retval < 0) perror("lseek error");
(gdb) n
66		retval = read(fd1, buf1, 5);
(gdb) n
67		if (retval < 0) perror("read error");
(gdb) n
70		retval = lseek(fd2, 72, SEEK_CUR);
(gdb) n
71		if (retval < 0) perror("lseek error");
(gdb) n
72		retval = read(fd2, buf2, 5);
(gdb) n
73		if (retval < 0) perror("read error");
(gdb) n
75		retval = memcmp(buf1, buf2, 5);
(gdb) p [K buf1
$1 = "local", '\000' <repeats 94 times>
(gdb) o bf[K[K[K[Kp buf2
$2 = "-loca", '\000' <repeats 94 times>
(gdb) q
A debugging session is active.

	Inferior 1 [process 20455] will be killed.

Quit anyway? (y or n) y
]0;taba238@taba238: ~/CS485G/Lab2taba238@taba238:~/CS485G/Lab2$ ls
[0m[01;32mmatch[0m  match.c  MyDebugSession.txt
]0;taba238@taba238: ~/CS485G/Lab2taba238@taba238:~/CS485G/Lab2$ vi match.c
[?1049h[?1h=[2;1Hâ–½[6n[1;1H  [1;1H[1;43r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[43;1H"match.c" 133L, 3531C[>c[1;1H[34m/* There are two bugs in this program.  In both cases the bug is
 * an incorrect constant in the program.  Find the incorrect constant,
 * fix it, and you will get the memcmp() call to be equal -- i.e., match!
 * 
 * Your goal is to use gdb to debug the program.  You should record your
 * debugging session using the script program, and then upload the
 * resulting file to the csportal.
 * 
 * YOU MUST PERFORM THIS EXERCISE ON YOUR VM.
 * 
 * To record your session:
 *   1. Use the script command (script MyDebugSession.txt).
 * 
 * To record debug the program:
 *   2. Compile the program so that it can be debugged
 *      (gcc -Wall -g -o match match.c)
 *   3. Run gdb on the program (gdb ./match).
 *   4. Use gdb commands to run the program and find the bugs.
 *   5. Edit the program to fix the bugs, recompile, and rerun the
 *      program without gdb, which should print out a message indicating
 *      that you have debugged both phases correctly.
 *   6. Display your new version of the program (cat match.c).
 * 
 * To stop recording your session:
 *   7. Type exit.
 * 
 * Now submit MyDebugSession.txt to https://www.cs.uky.edu/csportal.
 * You can either start a browser on your VM, or you can copy the file to some[29;1H * other machine and use a browser there.
 */[m

[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stdlib.h>[m
[35m#include [m[31m<string.h>[m
[35m#include [m[31m<sys/types.h>[m
[35m#include [m[31m<sys/stat.h>[m
[35m#include [m[31m<fcntl.h>[m
[35m#include [m[31m<unistd.h>[m

[35m#define buflen [m[31m100[m
[32mchar[m buf1[buflen];
[32mchar[m buf2[buflen];[43;61H1,1[11CTop[1;1H[?12l[?25h[?25l[43;61H31,0-1[31;1H[?12l[?25h[?25l[43;62H9[39;1H[?12l[?25h[?25l[1;42r[42;1H
[1;43r[43;1H[K[43;61H43,0-1[9C1%[42;1H[?12l[?25h[?25l[1;42r[1;1H[6M[1;43r[37;1H[34m/* --- sorry --- */[m
[32mvoid[m sorry([32mchar[m *test) {[39;9Hprintf([31m"Sorry!  You did not debug the [m[35m%s[m[31m correctly.[m[35m\n[m[31m"[m, test);[40;9Hexit(-[31m1[m);
} [34m// sorry()[m[43;61H[K[43;61H49,0-1[9C7%[42;1H[?12l[?25h[?25l[1;42r[1;1H[5M[1;43r[38;1H[34m/* --- firstTest --- */[m
[32mvoid[m firstTest([32mchar[m *name1, [32mchar[m *name2) {[40;9H[32mint[m fd1, fd2;[41;9H[32mint[m retval;[43;61H[K[43;61H54,0-1[8C13%[42;1H[?12l[?25h[?25l[1;42r[1;1H[9M[1;43r[34;9H[38;5;130mif[m ((fd1 = open(name1, O_RDONLY)) < [31m0[m) {[35;17Hperror(name1);[36;17Hexit(-[31m1[m);[37;9H}[38;9H[38;5;130mif[m ((fd2 = open(name2, O_RDONLY)) < [31m0[m) {[39;17Hperror(name2);[40;17Hexit(-[31m1[m);[41;9H}[43;61H[K[43;61H63,0-1[8C23%[42;1H[?12l[?25h[?25l[1;42r[1;1H[5M[1;43r[38;9Hretval = lseek(fd1, [31m10[m, [31mSEEK_CUR[m);[39;9H[38;5;130mif[m (retval < [31m0[m) perror([31m"lseek error"[m);[40;9Hretval = read(fd1, buf1, [31m5[m);[41;9H[38;5;130mif[m (retval < [31m0[m) perror([31m"read error"[m);[43;61H[K[43;61H68,0-1[8C28%[42;1H[?12l[?25h[?25l[1;42r[42;1H
[1;43r[42;9H[34m/* Hint -- the error is an incorrect constant in the next line */[m[43;61H[K[43;61H69,1-8[8C29%[42;8H[?12l[?25h[?25l[1;42r[42;1H
[1;43r[42;9Hretval = lseek(fd2, [31m72[m, [31mSEEK_CUR[m);[43;61H[K[43;61H70,1-8[8C30%[42;8H[?12l[?25h[?25l[1;42r[42;1H
[1;43r[42;9H[38;5;130mif[m (retval < [31m0[m) perror([31m"lseek error"[m);[43;61H[K[43;61H71,1-8[8C31%[42;8H[?12l[?25h[?25l[1;42r[42;1H
[1;43r[42;9Hretval = read(fd2, buf2, [31m5[m);[43;61H[K[43;61H72,1-8[8C32%[42;8H[?12l[?25h[?25l[43;62H1[41;8H[?12l[?25h[?25l[43;62H0[40;8H[?12l[?25h[?25l[43;64H2-9[40;9H[?12l[?25h[?25l[43;64H3-10[40;10H[?12l[?25h[?25l[43;64H4-11[40;11H[?12l[?25h[?25l[43;64H5-12[40;12H[?12l[?25h[?25l[43;64H6-13[40;13H[?12l[?25h[?25l[43;64H7-14[40;14H[?12l[?25h[?25l[43;64H8-15[40;15H[?12l[?25h[?25l[43;64H9-16[40;16H[?12l[?25h[?25l[43;64H10-17[40;17H[?12l[?25h[?25l[43;65H1-18[40;18H[?12l[?25h[?25l[43;65H2-19[40;19H[?12l[?25h[?25l[43;65H3-20[40;20H[?12l[?25h[?25l[43;65H4-21[40;21H[?12l[?25h[?25l[43;65H5-22[40;22H[?12l[?25h[?25lk[106m([17C)[m[43;65H6-23[40;23H[?12l[?25h[?25l([17C)[43;65H7-24[40;24H[?12l[?25h[?25l[43;65H8-25[40;25H[?12l[?25h[?25l[43;65H9-26[40;26H[?12l[?25h[?25l[43;64H20-27[40;27H[?12l[?25h[?25l[43;65H1-28[40;28H[?12l[?25h[?25l[43;65H2-29[40;29H[?12l[?25h[?25l[43;65H3-30[40;30H[?12l[?25h[?25l[43;65H4-31[40;31H[?12l[?25h[?25l


[1m-- INSERT --[m[43;61H[K[43;61H70,24-31      32%[40;31H[?12l[?25h[?25l, [31mSEEK_CUR[m);[40;42H[K[43;65H3-30[40;30H[?12l[?25h[?25l[31m3[m, [31mSEEK_CUR[m);[43;65H4-31[40;31H[?12l[?25h[43;1H[K[40;30H[?25l[43;61H70,23-30      32%[40;30H[?12l[?25h[?25l[43;61H[K[43;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"match.c" 133L, 3531C written
[?1l>[?12l[?25h[?1049l]0;taba238@taba238: ~/CS485G/Lab2taba238@taba238:~/CS485G/Lab2$ vi match.cls[Kgdb ./matchcc -Wall -g -o match match.c
]0;taba238@taba238: ~/CS485G/Lab2taba238@taba238:~/CS485G/Lab2$ ./match
You debugged the first one correctly!
Sorry!  You did not debug the secondTest correctly.
]0;taba238@taba238: ~/CS485G/Lab2taba238@taba238:~/CS485G/Lab2$ gdb ma[K[Kmatch
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from match...done.
(gdb) b 112
Breakpoint 1 at 0x400a3e: file match.c, line 112.
(gdb) r
Starting program: /home/taba238/CS485G/Lab2/match 
You debugged the first one correctly!

Breakpoint 1, secondTest (filename1=0x7fffffffe430 "/bin/ls", 
    filename2=0x7fffffffe4a0 "/bin/cat") at match.c:112
112		retval = memcmp(buf1, buf2, 4);
(gdb)  [Kp[Kp /d buf1
$1 = {0, 64, 0, 0, 108, 0 <repeats 95 times>}
(gdb) p /d buf2
$2 = {0, 64, 0, 64, 108, 0 <repeats 95 times>}
(gdb) b
Note: breakpoint 1 also set at pc 0x400a3e.
Breakpoint 2 at 0x400a3e: file match.c, line 112.
(gdb) q
A debugging session is active.

	Inferior 1 [process 20475] will be killed.

Quit anyway? (y or n) y
]0;taba238@taba238: ~/CS485G/Lab2taba238@taba238:~/CS485G/Lab2$ ls
[0m[01;32mmatch[0m  match.c  MyDebugSession.txt
]0;taba238@taba238: ~/CS485G/Lab2taba238@taba238:~/CS485G/Lab2$ vi match.
c[?1049h[?1h=[2;1Hâ–½[6n[1;1H  [1;1H[1;43r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[43;1H"match." [New File][>c[2;1H[94m~                                                                             [3;1H~                                                                             [4;1H~                                                                             [5;1H~                                                                             [6;1H~                                                                             [7;1H~                                                                             [8;1H~                                                                             [9;1H~                                                                             [10;1H~                                                                             [11;1H~                                                                             [12;1H~                                                                             [13;1H~                                                                             [14;1H~                                                                             [15;1H~                                                                             [16;1H~                                                                             [17;1H~                                                                             [18;1H~                                                                             [19;1H~                                                                             [20;1H~                                                                             [21;1H~                                                                             [22;1H~                                                                             [23;1H~                                                                             [24;1H~                                                                             [25;1H~                                                                             [26;1H~                                                                             [27;1H~                                                                             [28;1H~                                                                             [29;1H~                                                                             [30;1H~                                                                             [31;1H~                                                                             [32;1H~                                                                             [33;1H~                                                                             [34;1H~                                                                             [35;1H~                                                                             [36;1H~                                                                             [37;1H~                                                                             [38;1H~                                                                             [39;1H~                                                                             [40;1H~                                                                             [41;1H~                                                                             [42;1H~                                                                             [m[43;61H0,0-1[9CAll[1;1H[?12l[?25h[?25l[43;1H[K[43;1H:[?12l[?25hq[?25l[?12l[?25h[?25l[43;1H[K[43;1H[?1l>[?12l[?25h[?1049l]0;taba238@taba238: ~/CS485G/Lab2taba238@taba238:~/CS485G/Lab2$ vi M[Kmatch.c 
[?1049h[?1h=[2;1Hâ–½[6n[1;1H  [1;1H[1;43r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[43;1H"match.c" 133L, 3531C[>c[1;1H[34m/* There are two bugs in this program.  In both cases the bug is
 * an incorrect constant in the program.  Find the incorrect constant,
 * fix it, and you will get the memcmp() call to be equal -- i.e., match!
 * 
 * Your goal is to use gdb to debug the program.  You should record your
 * debugging session using the script program, and then upload the
 * resulting file to the csportal.
 * 
 * YOU MUST PERFORM THIS EXERCISE ON YOUR VM.
 * 
 * To record your session:
 *   1. Use the script command (script MyDebugSession.txt).
 * 
 * To record debug the program:
 *   2. Compile the program so that it can be debugged
 *      (gcc -Wall -g -o match match.c)
 *   3. Run gdb on the program (gdb ./match).
 *   4. Use gdb commands to run the program and find the bugs.
 *   5. Edit the program to fix the bugs, recompile, and rerun the
 *      program without gdb, which should print out a message indicating
 *      that you have debugged both phases correctly.
 *   6. Display your new version of the program (cat match.c).
 * 
 * To stop recording your session:
 *   7. Type exit.
 * 
 * Now submit MyDebugSession.txt to https://www.cs.uky.edu/csportal.
 * You can either start a browser on your VM, or you can copy the file to some[29;1H * other machine and use a browser there.
 */[m

[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stdlib.h>[m
[35m#include [m[31m<string.h>[m
[35m#include [m[31m<sys/types.h>[m
[35m#include [m[31m<sys/stat.h>[m
[35m#include [m[31m<fcntl.h>[m
[35m#include [m[31m<unistd.h>[m

[35m#define buflen [m[31m100[m
[32mchar[m buf1[buflen];
[32mchar[m buf2[buflen];[43;61H1,1[11CTop[1;1H[?12l[?25h[?25l[43;61H31,0-1[31;1H[?12l[?25h[?25l[43;62H9[39;1H[?12l[?25h[?25l[1;42r[42;1H
[1;43r[43;1H[K[43;61H43,0-1[9C1%[42;1H[?12l[?25h[?25l[1;42r[1;1H[6M[1;43r[37;1H[34m/* --- sorry --- */[m
[32mvoid[m sorry([32mchar[m *test) {[39;9Hprintf([31m"Sorry!  You did not debug the [m[35m%s[m[31m correctly.[m[35m\n[m[31m"[m, test);[40;9Hexit(-[31m1[m);
} [34m// sorry()[m[43;61H[K[43;61H49,0-1[9C7%[42;1H[?12l[?25h[?25l[1;42r[1;1H[5M[1;43r[38;1H[34m/* --- firstTest --- */[m
[32mvoid[m firstTest([32mchar[m *name1, [32mchar[m *name2) {[40;9H[32mint[m fd1, fd2;[41;9H[32mint[m retval;[43;61H[K[43;61H54,0-1[8C13%[42;1H[?12l[?25h[?25l[1;42r[1;1H[9M[1;43r[34;9H[38;5;130mif[m ((fd1 = open(name1, O_RDONLY)) < [31m0[m) {[35;17Hperror(name1);[36;17Hexit(-[31m1[m);[37;9H}[38;9H[38;5;130mif[m ((fd2 = open(name2, O_RDONLY)) < [31m0[m) {[39;17Hperror(name2);[40;17Hexit(-[31m1[m);[41;9H}[43;61H[K[43;61H63,0-1[8C23%[42;1H[?12l[?25h[?25l[1;42r[1;1H[5M[1;43r[38;9Hretval = lseek(fd1, [31m10[m, [31mSEEK_CUR[m);[39;9H[38;5;130mif[m (retval < [31m0[m) perror([31m"lseek error"[m);[40;9Hretval = read(fd1, buf1, [31m5[m);[41;9H[38;5;130mif[m (retval < [31m0[m) perror([31m"read error"[m);[43;61H[K[43;61H68,0-1[8C28%[42;1H[?12l[?25h[?25l[1;42r[1;1H[14M[1;43r[29;9H[34m/* Hint -- the error is an incorrect constant in the next line */[m[30;9Hretval = lseek(fd2, [31m73[m, [31mSEEK_CUR[m);[31;9H[38;5;130mif[m (retval < [31m0[m) perror([31m"lseek error"[m);[32;9Hretval = read(fd2, buf2, [31m5[m);[33;9H[38;5;130mif[m (retval < [31m0[m) perror([31m"read error"[m);[35;9Hretval = memcmp(buf1, buf2, [31m5[m);[36;9H[38;5;130mif[m (retval != [31m0[m) {[37;17Hsorry([31m"firstTest"[m);[38;9H} [38;5;130melse[m {[39;17Hprintf([31m"You debugged the first one correctly![m[35m\n[m[31m"[m);[40;9H}
}[43;61H[K[43;61H82,0-1[8C43%[42;1H[?12l[?25h[?25l[1;42r[1;1H[6M[1;43r[37;1H[34m/* --- secondTest --- */[m
[32mvoid[m secondTest([32mchar[m *filename1, [32mchar[m *filename2) {[39;9H[32mint[m filedes1, filedes2;[40;9H[32mint[m *value;[41;9H[32mint[m retval;[43;61H[K[43;61H88,0-1[8C50%[42;1H[?12l[?25h[?25l[1;42r[1;1H[14M[1;43r[29;9H[38;5;130mif[m ((filedes1 = open(filename1, O_RDONLY)) < [31m0[m) {[30;17Hperror(filename1);[31;17Hexit(-[31m1[m);[32;9H}[33;9H[38;5;130mif[m ((filedes2 = open(filename2, O_RDONLY)) < [31m0[m) {[34;17Hperror(filename2);[35;17Hexit(-[31m1[m);[36;9H}[38;9Hretval = lseek(filedes1, [31m31[m, [31mSEEK_CUR[m);[39;9H[38;5;130mif[m (retval < [31m0[m) perror([31m"lseek error"[m);[40;9Hretval = read(filedes1, buf1, [31m4[m);[41;9H[38;5;130mif[m (retval < [31m0[m) perror([31m"read error"[m);[43;61H[K[43;61H102,0-1[7C65%[42;1H[?12l[?25h[?25l[1;42r[1;1H[5M[1;43r[38;9Hretval = lseek(filedes2, [31m79[m, [31mSEEK_CUR[m);[39;9H[38;5;130mif[m (retval < [31m0[m) perror([31m"lseek error"[m);[40;9Hretval = read(filedes2, buf2, [31m4[m);[41;9H[38;5;130mif[m (retval < [31m0[m) perror([31m"read error"[m);[43;61H[K[43;61H107,0-1[7C71%[42;1H[?12l[?25h[?25l[1;42r[1;1H[12M[1;43r[31;9Hvalue = ([32mint[m *) buf2;[32;9H[34m/* Hint -- the error is in the next line */[m[33;9H*value = *value & [31m0xffffffff[m;[35;9Hretval = memcmp(buf1, buf2, [31m4[m);[36;9H[38;5;130mif[m (retval != [31m0[m) {[37;17Hsorry([31m"secondTest"[m);[38;9H} [38;5;130melse[m {[39;17Hprintf([31m"You debugged the second one correctly![m[35m\n[m[31m"[m);[40;9H}
} [34m// secondTest()[m[43;61H[K[43;61H119,0-1[7C84%[42;1H[?12l[?25h[?25l[7;51H[106m{[41;1H}[m[43;63H8,1  [41;1H[?12l[?25h[?25l[7;51H{[41;1H}[43;63H7,1-8[40;8H[?12l[?25h[?25l[43;63H6[39;8H[?12l[?25h[?25l[43;63H5[38;8H[?12l[?25h[?25l[43;63H4[37;8H[?12l[?25h[?25l[43;63H3[36;8H[?12l[?25h[?25l[43;63H2[35;8H[?12l[?25h[?25l[43;63H1[34;8H[?12l[?25h[?25l[43;63H0[33;8H[?12l[?25h[?25l[43;62H09[32;8H[?12l[?25h[?25l[43;65H2-9[32;9H[?12l[?25h[?25l[43;62H10[33;9H[?12l[?25h[?25l[43;65H3-10[33;10H[?12l[?25h[?25l[43;65H4-11[33;11H[?12l[?25h[?25l[43;65H5-12[33;12H[?12l[?25h[?25l[43;65H6-13[33;13H[?12l[?25h[?25l[43;65H7-14[33;14H[?12l[?25h[?25l[43;65H8-15[33;15H[?12l[?25h[?25l[43;65H9-16[33;16H[?12l[?25h[?25l[43;65H10-17[33;17H[?12l[?25h[?25l[43;66H1-18[33;18H[?12l[?25h[?25l[43;66H2-19[33;19H[?12l[?25h[?25l[43;66H3-20[33;20H[?12l[?25h[?25l[43;66H4-21[33;21H[?12l[?25h[?25l[43;66H5-22[33;22H[?12l[?25h[?25l[43;66H6-23[33;23H[?12l[?25h[?25l[43;66H7-24[33;24H[?12l[?25h[?25l[43;66H8-25[33;25H[?12l[?25h[?25l[43;66H9-26[33;26H[?12l[?25h[?25l[43;65H20-27[33;27H[?12l[?25h[?25l[43;66H1-28[33;28H[?12l[?25h[?25l[43;66H2-29[33;29H[?12l[?25h[?25l[43;66H3-30[33;30H[?12l[?25h[?25l[43;66H4-31[33;31H[?12l[?25h[?25l[43;66H5-32[33;32H[?12l[?25h[?25l[43;66H6-33[33;33H[?12l[?25h[?25l[43;66H7-34[33;34H[?12l[?25h[?25l[43;66H8-35[33;35H[?12l[?25h[?25l[43;66H9-36[33;36H[?12l[?25h[?25l[43;65H30-37[33;37H[?12l[?25h[?25l[43;1H[1m-- INSERT --[m[43;61H[K[43;61H110,30-37     84%[33;37H[?12l[?25h[?25l;[33;37H[K[43;65H29-36[33;36H[?12l[?25h[?25l;[33;36H[K[43;66H8-35[33;35H[?12l[?25h[?25l;[33;35H[K[43;66H7-34[33;34H[?12l[?25h[?25l;[33;34H[K[43;66H6-33[33;33H[?12l[?25h[?25l;[33;33H[K[43;66H5-32[33;32H[?12l[?25h[?25l;[33;32H[K[43;66H4-31[33;31H[?12l[?25h[?25l;[33;31H[K[43;66H3-30[33;30H[?12l[?25h[?25l0x;[33;30H[K[43;66H2-29[33;29H[?12l[?25h[?25l[31m0x0[m;[43;66H3-30[33;30H[?12l[?25h[?25l[31m0[m;[43;66H4-31[33;31H[?12l[?25h[?25l[31m0[m;[43;66H5-32[33;32H[?12l[?25h[?25l[31m0[m;[43;66H6-33[33;33H[?12l[?25h[?25l[31m4[m;[43;66H7-34[33;34H[?12l[?25h[?25l[31m0[m;[43;66H8-35[33;35H[?12l[?25h[?25l[31m0[m;[43;66H9-36[33;36H[?12l[?25h[?25l[31m0[m;[43;65H30-37[33;37H[?12l[?25h[43;1H[K[33;36H[?25l[43;61H110,29-36     84%[33;36H[?12l[?25h[?25l[43;61H[K[43;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"match.c" 133L, 3531C written
[?1l>[?12l[?25h[?1049l]0;taba238@taba238: ~/CS485G/Lab2taba238@taba238:~/CS485G/Lab2$ vi match.c [Kls[Kgdb match[2P./matchgcc -Wall -g -o match match.c
]0;taba238@taba238: ~/CS485G/Lab2taba238@taba238:~/CS485G/Lab2$ ./match 
You debugged the first one correctly!
You debugged the second one correctly!
]0;taba238@taba238: ~/CS485G/Lab2taba238@taba238:~/CS485G/Lab2$ cat match.c
/* There are two bugs in this program.  In both cases the bug is
 * an incorrect constant in the program.  Find the incorrect constant,
 * fix it, and you will get the memcmp() call to be equal -- i.e., match!
 * 
 * Your goal is to use gdb to debug the program.  You should record your
 * debugging session using the script program, and then upload the
 * resulting file to the csportal.
 * 
 * YOU MUST PERFORM THIS EXERCISE ON YOUR VM.
 * 
 * To record your session:
 *   1. Use the script command (script MyDebugSession.txt).
 * 
 * To record debug the program:
 *   2. Compile the program so that it can be debugged
 *      (gcc -Wall -g -o match match.c)
 *   3. Run gdb on the program (gdb ./match).
 *   4. Use gdb commands to run the program and find the bugs.
 *   5. Edit the program to fix the bugs, recompile, and rerun the
 *      program without gdb, which should print out a message indicating
 *      that you have debugged both phases correctly.
 *   6. Display your new version of the program (cat match.c).
 * 
 * To stop recording your session:
 *   7. Type exit.
 * 
 * Now submit MyDebugSession.txt to https://www.cs.uky.edu/csportal.
 * You can either start a browser on your VM, or you can copy the file to some
 * other machine and use a browser there.
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>

#define buflen 100
char buf1[buflen];
char buf2[buflen];

/* --- sorry --- */
void sorry(char *test) {
	printf("Sorry!  You did not debug the %s correctly.\n", test);
	exit(-1);
} // sorry()

/* --- firstTest --- */
void firstTest(char *name1, char *name2) {
	int fd1, fd2;
	int retval;

	if ((fd1 = open(name1, O_RDONLY)) < 0) {
		perror(name1);
		exit(-1);
	}
	if ((fd2 = open(name2, O_RDONLY)) < 0) {
		perror(name2);
		exit(-1);
	}

	retval = lseek(fd1, 10, SEEK_CUR);
	if (retval < 0) perror("lseek error");
	retval = read(fd1, buf1, 5);
	if (retval < 0) perror("read error");

	/* Hint -- the error is an incorrect constant in the next line */
	retval = lseek(fd2, 73, SEEK_CUR);
	if (retval < 0) perror("lseek error");
	retval = read(fd2, buf2, 5);
	if (retval < 0) perror("read error");
	
	retval = memcmp(buf1, buf2, 5);
	if (retval != 0) {
		sorry("firstTest");
	} else {
		printf("You debugged the first one correctly!\n");
	}
}

/* --- secondTest --- */
void secondTest(char *filename1, char *filename2) {
	int filedes1, filedes2;
	int *value;
	int retval;

	if ((filedes1 = open(filename1, O_RDONLY)) < 0) {
		perror(filename1);
		exit(-1);
	}
	if ((filedes2 = open(filename2, O_RDONLY)) < 0) {
		perror(filename2);
		exit(-1);
	}
	
	retval = lseek(filedes1, 31, SEEK_CUR);
	if (retval < 0) perror("lseek error");
	retval = read(filedes1, buf1, 4);
	if (retval < 0) perror("read error");

	retval = lseek(filedes2, 79, SEEK_CUR);
	if (retval < 0) perror("lseek error");
	retval = read(filedes2, buf2, 4);
	if (retval < 0) perror("read error");

	value = (int *) buf2;
	/* Hint -- the error is in the next line */
	*value = *value & 0x00004000;
	
	retval = memcmp(buf1, buf2, 4);
	if (retval != 0) {
		sorry("secondTest");
	} else {
		printf("You debugged the second one correctly!\n");
	}
} // secondTest()

/* --- main --- */
int main() {
	char file1[buflen];
	char file2[buflen];

	strcpy(file1, "/etc/hosts");
	strcpy(file2, "/etc/networks");
	firstTest(file1, file2);

	strcpy(file1, "/bin/ls");
	strcpy(file2, "/bin/cat");
	secondTest(file1, file2);
	return(0); // success
} // main()
]0;taba238@taba238: ~/CS485G/Lab2taba238@taba238:~/CS485G/Lab2$ exit
exit

Script done on Fri 02 Sep 2016 11:18:06 AM EDT
